import os 

#Creamos calse nodo 
class node():
    def __init__(self,dato):
        self.right = None 
        self.left = None 
        self.dato = dato 
        
#Creamos clase Arbol 
class arbol():
    def __init__(self):
        self.root = None 
        
    #Funcion para insertar 
    def insert(self, a, dato):
        if a is None:
            a = Node(dato)
        else:
            d = a.dato
            if dato < d:
                a.left = self.insert(a.left, dato)
            else:
                a.right = self.insert(a.right, dato)
        return a
        
    def insertar_si_no_existe(self, dato):
        if not self.buscar(dato, self.root):
            self.root = self.insert(self.root, dato)
            print(f"Elemento {dato} insertado correctamente.")
        else:
            print(f"El elemento {dato} ya existe en el Ã¡rbol.")
        
    
    #Funciones para recorrer el arbol 
    def inorder(self, a):
        if a == None :
            return None 
        else:
            self.inorder(a.left)
            print(a.dato)
            self.inorder(a.right)
            
    def preorder(self,a):
        if a == None :
            return None 
        else:
            print(a.dato)
            self.inorder(a.left)
            self.inorder(a.right)
            
    def postorder(self, a):
        if a == None :
            return None 
        else:
            self.inorder(a.left)
            self.inorder(a.right)
            print(a.dato)
            
    #Funcion para buscar un nodo 
    def buscar(self, dato, a):
        if a == None:
            return None 
        else:
            if dato == a.dato:
                return a.dato 
            else:
                if dato < a.dato:
                    return self.buscar(dato, a.left)
                else:
                    return self.buscar(dato, a.right)
                
    #Funcion para Eliminar 
    def eliminar(self, dato):
        node, padre, ubicacion = self.buscar(self.root, dato)
        
        if nodo:
            #Opcion 1 el nodo no tiene hijos 
            if node.getRefDer() == None and node.getRefIzq() == None:
                if ubicacion == "i":
                    padre.setRefIzq(None)
                elif ubicacion == "d":
                    padre.setRefDer(None)
                    
#Llamamos a la funcion arbol 
tree = arbol()
#Creamos el menu 
while True:
    os.system("cls")
    print("Arbol")
    opc = input("\n1. Insertar Nodo \n2. InOrden \n3. PreOrden \n4. PostOrden \n5. Buscar \n6. Eliminar \n7. Salir \nElige una opcion ->")
    
    if opc == '1':
        nodo = input ("\n Ingresa el nodo a agregar:")
        if nodo.isdigit():
            nodo = int(nodo)
            tree.root = tree.insert(tree.root, nodo)
        else: 
            print("Ingresa solo digitos")
    elif opc == '2':
        if tree.root == None:
            print("Vacio")
        else:
            tree.inorder(tree.root)
    elif opc == '3':
        if tree.root == None:
            print("Vacio")
        else:
            tree.preorder(tree.root)
    elif opc == '4':
        if tree.root == None:
            print("Vacio")
        else:
            tree.postorder(tree.root)
    elif opc == '5':
        nodo = input("\nIngresa el nodo a buscar:")
        if nodo.isdigit():
            nodo = int(nodo)
            if tree.buscar(nodo, tree.root) == None:
                print("\nNodo no encontrado")
            else:
                print("\nNodo encontrado,", tree.buscar(nodo, tree.root),"si existe")
        else:
            print("\nIngrese solo digitos")
    elif opc == '6':
        nodo = int(input("Ingrese el nodo a eliminar: "))
        tree.eliminar(nodo, tree.root)
        
    elif opc == '7':
        print("\nElegiste Salir\n")
        os.system("pause")
        break 
    else:
        print("\nElige una opcion valida")
        
            
